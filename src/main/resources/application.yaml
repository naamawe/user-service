spring:
  application:
    name: user-service
  shardingsphere:
    datasource:
      names: ds0, ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/user_db_0?useSSL=false&serverTimezone=UTC&characterEncoding=utf-8
        username: root
        password: '050126'
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/user_db_1?useSSL=false&serverTimezone=UTC&characterEncoding=utf-8
        username: root
        password: '050126'
    rules:
      sharding:
        transaction:
          type: BASE
          provider-type: Seata
        tables:
          users:
            actual-data-nodes: ds0.users_0,ds0.users_1,ds1.users_0,ds1.users_1
            table-strategy:
              standard:
                sharding-column: user_id
                sharding-algorithm-name: user-inline
            database-strategy:
              standard:
                sharding-column: user_id
                sharding-algorithm-name: database-inline
        sharding-algorithms:
          user-inline:
            type: INLINE
            props:
              algorithm-expression: users_${user_id % 2}
          database-inline:
            type: INLINE
            props:
              algorithm-expression: ds${user_id % 2}
    props:
      sql-show: true
      executor-size: 16
      max-connections-size-per-query: 1
      check-table-metadata-enabled: true
      proxy-database-type: MySQL
      show-sql: true
      acceptor-size: 16
  cloud:
    nacos:
      server-addr: 192.168.150.129:8848
  rabbitmq:
    host: 192.168.150.129
    port: 5672
    username: root
    password: 123321
    virtual-host: /
  redis:
    host: 192.168.150.129
    port: 6379
    timeout: 5000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1
    password: '050126'
  aop:
    proxy-target-class: false
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.xhx.userservice.entity.pojo
  configuration:
    map-underscore-to-camel-case: true
server:
  port: 8080
logging:
  level:
    org.apache.shardingsphere: DEBUG
    org.apache.ibatis: DEBUG
    java.sql: DEBUG
seata:
  application-id: user-service
  registry: # TC服务注册中心的配置，微服务根据这些信息去注册中心获取tc服务地址
    type: nacos # 注册中心类型 nacos
    nacos:
      server-addr: 192.168.150.129:8848 # nacos地址
      namespace: "" # namespace，默认为空
      group: DEFAULT_GROUP # 分组，默认是DEFAULT_GROUP
      application: seata-server # seata服务名称
      username: nacos
      password: nacos
  tx-service-group: my_tx_group # 事务组名称
  service:
    vgroup-mapping: # 事务组与tc集群的映射关系
      my_tx_group: "default"
  enable-auto-data-source-proxy: false
  enabled: true
system:
  jwt:
    location: classpath:JWT.jks
    alias: hmall
    password: hmall123
    tokenTTL: 30m
